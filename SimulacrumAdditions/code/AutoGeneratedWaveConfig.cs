using BepInEx;
using BepInEx.Configuration;
using RoR2;

namespace SimulacrumAdditions
{
    public class AutoConfig
    {
        public static ConfigFile ConfigFileAuto = new ConfigFile(Paths.ConfigPath + "\\Wolfo.Simulacrum_Additions___Autogenerated_Wave_Config_v2.1.0.cfg", true);

       
        public static ConfigEntry<int> cfgSuperBossEveryXWaves;


        public static void InitConfig()
        {
            InfiniteTowerWaveCategory category = SimuMain.ITBasicWaves;
            string categoryName = "Basic Waves";

            for (int i = 1; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> NEW = ConfigFileAuto.Bind(
               categoryName,
               category.wavePrefabs[i].wavePrefab.name,
               true,
               "Enable this wave? :\n"+
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(0).GetComponent<RoR2.UI.InfiniteTowerWaveCounter>().token) + "\n" +
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(1).GetComponent<RoR2.UI.LanguageTextMeshController>().token)
               );
            }
            //
            category = SimuMain.ITBossWaves;
            categoryName = "Boss Waves";
            for (int i = 1; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> NEW = ConfigFileAuto.Bind(
               categoryName,
               category.wavePrefabs[i].wavePrefab.name,
               true,
               "Enable this wave? :\n" +
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(0).GetComponent<RoR2.UI.InfiniteTowerWaveCounter>().token) + "\n" +
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(1).GetComponent<RoR2.UI.LanguageTextMeshController>().token)
               );
            }
            //
            category = SimuMain.ITSuperBossWaves;
            categoryName = "Super Boss Waves";
            for (int i = 0; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> NEW = ConfigFileAuto.Bind(
               categoryName,
               category.wavePrefabs[i].wavePrefab.name,
               true,
               "Enable this wave? :\n" +
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(0).GetComponent<RoR2.UI.InfiniteTowerWaveCounter>().token) + "\n" +
               Language.GetString(category.wavePrefabs[i].wavePrefab.GetComponent<InfiniteTowerWaveController>().overlayEntries[1].prefab.transform.GetChild(0).GetChild(1).GetChild(1).GetComponent<RoR2.UI.LanguageTextMeshController>().token)
               );
            }
        }


        public static void ApplyConfig()
        {
            InfiniteTowerWaveCategory category = SimuMain.ITBasicWaves;
            string categoryName = "Basic Waves";

            for (int i = 1; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> value = null;
                ConfigFileAuto.TryGetEntry<bool>(categoryName, category.wavePrefabs[i].wavePrefab.name, out value);
                if (value != null && value.Value == false)
                {
                    category.wavePrefabs[i].weight = 0;
                }
            }
            //
            category = SimuMain.ITBossWaves;
            categoryName = "Boss Waves";
            for (int i = 1; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> value = null;
                ConfigFileAuto.TryGetEntry<bool>(categoryName, category.wavePrefabs[i].wavePrefab.name, out value);
                if (value != null && value.Value == false)
                {
                    category.wavePrefabs[i].weight = 0;
                }
            }
            //
            category = SimuMain.ITSuperBossWaves;
            categoryName = "Super Boss Waves";
            for (int i = 0; i < category.wavePrefabs.Length; i++)
            {
                ConfigEntry<bool> value = null;
                ConfigFileAuto.TryGetEntry<bool>(categoryName, category.wavePrefabs[i].wavePrefab.name, out value);
                if (value != null && value.Value == false)
                {
                    category.wavePrefabs[i].weight = 0;
                }
            }

        }
    }
}